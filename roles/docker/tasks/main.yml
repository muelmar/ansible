---
# tasks file for docker
#
- name: Install essential packages
  ansible.builtin.package:
    name: 
      - htop
      - curl
      - wget
    state: present
########
- name: Add Docker's official GPG key
  shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc"
- name: Fix access right on docker.asc
  ansible.builtin.file:
    path: "/etc/apt/keyrings/docker.asc"
    mode: a+r
- name: Add Docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ VERSION_CODENAME }} stable
    state: present
    update_cache: yes
- name: Remove obsolete Docker packages
  ansible.builtin.package:
    name: 
      - ufw
      - docker-doc 
      - docker-compose 
      - docker-compose-v2 
      - podman-docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    autoremove: yes
- name: Install zfs and docker
  ansible.builtin.package:
    name: 
      - zfsutils-linux
      - docker-ce 
      - docker-ce-cli 
      - containerd.io 
      - docker-buildx-plugin 
      - docker-compose-plugin
    state: latest
    #######
- name: Check if the zpool exists
  command: "zpool list {{ zpool_name }}"
  register: zpool_check
  ignore_errors: yes

- name: Create zpool if it doesn't exist
  command: "zpool create {{ zpool_name }}  {{ zdevice1 }} "
  when: zpool_check.rc != 0

- name: Ensure the zpool is created
  command: "zpool list {{ zpool_name }}"
  register: zpool_status
  failed_when: zpool_status.rc != 0
  ######
- name: create datasets (zfs filesystems)
  include_tasks: "zfs_dataset.yml" 
  loop: "{{ datasets }}"
  loop_control:
    label: "{{ item.name }}"
- name: Ensure Docker service is started and enabled
  service:
    name: docker
    state: started
    enabled: yes
